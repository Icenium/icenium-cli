--[]--

Usage:
    $ ice <command> [command parameters] [--command options] [--path <path>]

Commands:
    help <command>        Shows additional help on commands in this list.
    login                 Login.
    create                Create a project.
    list-provisions       Lists all registered mobile provisions for iOS builds.
    list-certificates     Lists all registered certificates for iOS builds.
    build                 Builds the project and produces a QR code for deploying the build package.
    ion                   Deploy the project in ION.
    deploy                Deploy the project to a connected device.
    update                Synchronize the project with the cloud to enable LiveSync.
    sync                  Synchronize the project with the device.
    find-plugins          Search plugins in the Cordova Plugin Registry by keywords.
    fetch-plugin          Copies a cordova plugin in your project folder.

Options:
    --path <path>         Specifies the path to the project. If not specified, the project is searched
                          for in the current directory and all directories above it.

--[/]--


--[login]--

Usage:
    $ ice login

A browser window will open where you can enter your credentials. After completing the login, you can close
the browser tab and continue working on the command line.

--[/]--

--[create]--

Usage:
    $ ice create [--template <Template>] [--path path]

Creates a new CLI-based project. Options:
    --template <Template> - bases the new project on the given template. Supported templates
        are Blank, Everlive, JQuery, KendoUI and KendoUIDataViz. The default is KendoUI.
    --path - specifies the path where the project will be created. By default the command is
        executed in the current directory. The directory must be empty.

--[/]--

--[list-provisions]--
Usage:
    $ ice list-provisions

Lists all registered mobile provisions for iOS builds. The list contains both indexes and names.
Use either the index or name for the --provision option when building.
--[/]--

--[list-certificates]--
Usage:
    $ ice list-certificates

Lists all registered certificates for iOS builds. The list contains both indexes and names.
Use either the index or name for the --certificate option when building.
--[/]--

--[build]--
Usage:
    $ ice build <Platform> [--download]

Platform-specific examples:
    $ ice build android
    $ ice build ios --certificate <id or name> --provision <id or name>

Builds the project for the target platform and produces a QR code for deployment.

The certificate and provision id or name can be taken from the output of the list-certificates
and list-provisions commands.

Options:
    --download - downloads the package to the .ice directory in the project directory, instead
        of producing a QR code. Useful for manual deployment of iOS projects built with a
        development provision instead of an ad-hoc one.

--[/]--

--[ion]--
Usage:
    $ ice ion

Deploys to ION. Scan the produced QR code on an iOS device with ION installed.
--[/]--

--[update]--
Usage:
    $ ice update

Synchronize the project with the cloud to enable LiveSync. Execute 'update' whenever you
want to see updated content on a running ION or untethered deployment. Execute the LiveSync
action (three-fingered tap-and-hold on iOS, menu button on Android) to download the
updated content.
--[/]--

--[deploy]--
Usage:
    $ ice deploy <Platform>

Platform-specific examples:
    $ ice deploy android [--device <id>]
    $ ice deploy ios --certificate <id or name> --provision <id or name>

Builds the project for the specified platform and deploys it to a connected device.

The certificate and provision id or name can be taken from the output of the list-certificates
and list-provisions commands.

Options:
    --device - the ID of the device, if more than one device is connected.

--[/]--

--[sync]--
usage:
    $ ice sync [<Platform>]

Platform-specific example:
    $ ice sync android [--device <id>] [--live]
    $ ice sync ios [--device <id>] [--live]

Synchronize the project with the device. Execute 'sync' whenever you
want to see updated content on a running tethered deployment.

Options:
    --live - continue listening for project file changes and upload changed files to the device
        and refresh automatically.

    --device - the serial number or index of the device, if more than one device is connected.

--[/]--

--[find-plugins]--
Usage:
    $ ice find-plugins [<keyword> [,<keyword>]*>]

Search plugins in the Cordova Plugin Registry by keywords.
--[/]--

--[fetch-plugin]--
Usage:
    $ ice fetch-plugin <PluginId>

Copies a cordova plugin in your project folder.
The <PluginId> can be a local path, URL to a plugin repository or name of a plugin published to the Cordova Plugin Registry.

Options:
    --path <path> - Specifies the path to the project. If not specified, the project is searched
                    for in the current directory and all directories above it.

--[/]--
