--[]--

Usage:
    $ appbuilder <command> [command parameters] [--command <options>]

General commands:
    help <command>                  Shows additional information about the commands in this list.
    login                           Logs you in the Telerik Platform.
    logout                          Logs you out from the Telerik Platform.
    user                            Prints information about the currently logged in user.
    feature-usage-tracking          Enable/disable anonymous feature usage tracking.

Project development commands:
    create                          Creates a new project from template.
    init                            Initializes an existing project for development.
    build                           Builds the project and downloads the application package or produces a QR code
                                    for deploying the application package.
    deploy                          Builds and deploys the project to a connected device.
    cloud-sync                      Synchronizes the project with the cloud to enable LiveSync for remote devices.
    livesync                        Synchronizes the latest changes in your project to connected devices.
    simulate                        Runs the current project in the device simulator on Windows systems.
    debug                           Runs an application allowing you to remotely debug applications on connected devices.
    simulate                        Runs the current project in the device simulator.
    plugin find                     Searches for plugins in the Apache Cordova Plugin Registry by keyword.
    plugin fetch                    Imports an Apache Cordova plugin into your project.
    edit-configuration              Opens a configuration file for editing.
    prop print                      Shows the value of the selected project property.
    prop add                        Enables more options for the selected project property, if the property accepts multiple values.
    prop set                        Sets a project property.
    prop remove                     Disables options for the selected project property, if the property accepts multiple values.
    list-projects                   Lists all projects associated with your Telerik Platform account.
    export-project                  Exports a selected project from the cloud and initializes it for development.

Device commands:
    device                          Lists all recognized connected devices.
    device log                      Opens the log stream for the selected device.

Certificate management and publishing commands:
    certificate                     Lists all configured certificates for code signing iOS and Android applications.
    certificate create-self-signed  Creates self-signed certificate for code signing Android applications.
    certificate remove              Removes the selected certificate from the server.
    certificate export              Exports the selected certificate from the server on your file system.
    certificate import              Imports a certificate from your file system to the server.
    provision                       Lists all configured provisioning profiles for code signing iOS applications.
    provision import                Imports a provisioning profile from file.
    provision remove                Removes a registered provisioning profile.
    appstore list                   Lists all applications in iTunes Connect that are in the Waiting for Upload state.
    appstore upload                 Builds the project and uploads the binary to iTunes Connect.

Global Options:
    --help                Prints help about the selected command.
    --path <path>         Specifies the file path to the project. If not set, the project is searched for
                          in the current directory and all directories above it.
    --version             Prints the client version and exits.

--[/]--

--[login]--

Usage:
    $ appbuilder login

Opens a new browser window in which you can provide your login credentials for the Telerik Platform.
After you have authenticated with Telerik Platform, you can close the browser window and continue your work from the 
command line.

--[/]--

--[logout]--

Usage:
    $ appbuilder logout

Logs you out from the Telerik Platform.
To build, deploy, or synchronize your projects with the cloud, you need to be logged in.

--[/]--

--[create]--

Usage:
    $ appbuilder create <App name> [--template <Template>] [--path <path>] [--appid <App ID>]

Creates a new project from template.
<App name> is the name of the application. The maximum length is 30 characters. You can use only the following characters:
    A-Z, a-z, 0-9, underscore (_), dot (.), plus (+), hyphen (-), at (@), dollar ($), ampersand (&), semi-colon (;),
    opening and closing brackets (()), and comma (,).

Options:
    --template <Template> - Sets the source template for the project. You can use the following templates:
        #{templatesService.projectTemplatesString}. The default value is KendoUI.
    --path - Specifies the path where you want to create the project, if different from the current directory. 
        The directory must be empty.
    --appid - Sets the application identifier for your app. The application identifier must consist of at least three
        alphanumeric strings, separated by a dot (.). Each string must start with a letter.
        The application identifier corresponds to the Bundle ID for iOS apps and to the package identifier for Android apps.
        If not specified, the application identifier is set to com.telerik.<App name>.

--[/]--

--[init]--

Usage:
    $ appbuilder init [--appid <App ID>]

Initializes an existing project for development in the current directory. If the folder contains an existing AppBuilder project (created with
the Telerik AppBuilder extension for Visual Studio or synchronized from GitHub), the project retains the existing project configuration.

Options:
    --appid - Sets the application identifier for your app. The application identifier must consist of at least three
        alphanumeric strings, separated by a dot (.). Each string must start with a letter.
        The application identifier corresponds to the Bundle ID for iOS apps and to the package identifier for Android apps.
        If not specified, the application identifier is set to com.telerik.<current directory name>.

--[/]--

--[device]--
Usage:
    $ appbuilder device [<Platform>] [--timeout  <Milliseconds>] [command]

Platform-specific examples:
    $ appbuilder device android
    $ appbuilder device ios

Lists all recognized connected devices with serial number and index, grouped by platform. In this version of the Telerik AppBuilder CLI,
you can connect only iOS and Android devices.

If a connected Android device is not shown in the list, make sure that you have installed the required Android USB drivers on your system
and that USB debugging is enabled on the device.

Options:
   --timeout - Sets the time in milliseconds for the operation to search for connected devices before completing.
      The operation will continue to wait and listen for newly connected devices and will list them
      after the specified time expires. If not set, the default value is 4000.

Lists all recognized connected devices with serial number and index, grouped by platform.

If a connected Android device is not shown in the list, make sure that you have installed the Android USB drivers on your system
and that USB debugging is enabled on the device.

Commands:
    log - Opens the log stream for the selected device.

--[/]--

--[build]--
Usage:
    $ appbuilder build <Platform> [--download] [--save-to <File Path>] [--no-livesync]

Platform-specific examples:
    $ appbuilder build android [--companion]
    $ appbuilder build ios [--certificate <index or name>] [--provision <index or name>] [--companion]
    $ appbuilder build wp8

Builds the project for the target platform and produces an application package or a QR code for deployment.

Run list-certificates to list available certificates for code signing iOS applications. You can specify a certificate
by index or name.
Run list-provisions to list available provisioning profiles for code signing iOS applications. You can specify a 
provisioning profile by index or name.

You cannot specify both the --companion and --download options.

When you build for Windows Phone 8, Telerik AppBuilder always downloads the application package. In this version of the
Telerik AppBuilder CLI, you cannot deploy Windows Phone 8 applications via QR code.

Options:
    --download - If set, downloads the application package to the .ab directory in the current directory, instead
        of producing a QR code. Set this option if you want to manually deploy the app package later.
    --companion - Produces a QR code for deployment in the Telerik AppBuilder companion app. When deploying to the
        companion app, you do not need to set a certificate or provision.
    --certificate - Sets the certificate that you want to use for code signing your iOS app. Must match the selected
        provisioning profile. You can set a certificate by index or name. Required when building for iOS
        unless the --companion switch is set, or when the certificate chosen automatically is not appropriate.
    --provision - Sets the provisioning profile that you want to use for code signing your iOS app.
        Must match the selected certificate. You can set a provisioning profile by index or name.
        Required when building for iOS unless the --companion switch is set, or when the provision
        chosen automatically is not appropriate.
    --no-livesync - If set, disables LiveSync with the three-finger tap and hold gesture.
    --save-to - If set, downloads the application package and saves it to the specified file path,
        instead of the project root.

--[/]--

--[provision|import]--
Usage:
    $ appbuilder provision import <File>

Imports the provisioning profile stored in the selected file.
--[/]--

--[provision|remove]--
Usage:
    $ appbuilder provision remove <Name or #Index>

Removes the registered provisioning profile selected by its name or index. 

Run list-provisions to list available provisioning profiles for code signing iOS applications. You can specify a 
provisioning profile by index or name.
--[/]--

--[cloud-sync]--
Usage:
    $ appbuilder cloud-sync

Synchronizes the project with the cloud to enable LiveSync via wireless connection. 

To get the latest changes on device, tap and hold with three fingers on the device screen until the download pop-up
appears. When the download completes, the app refreshes automatically.
--[/]--

--[deploy]--
Usage:
    $ appbuilder deploy <Platform> [--no-livesync]

Platform-specific examples:
    $ appbuilder deploy android [--device <ID>]
    $ appbuilder deploy ios --certificate <Name or ID> --provision <Name or ID>

Builds the project for the selected platform and deploys it to a connected device. In this version of the Telerik AppBuilder CLI,
you cannot build and deploy to Windows Phone 8 connected devices.

Run list-certificates to list available certificates for code signing iOS applications. You can specify a certificate
by index or name.
Run list-provisions to list available provisioning profiles for code signing iOS applications. You can specify a 
provisioning profile by index or name.

Options:
    --device - Specifies the serial number or the index of the connected device on which you want to deploy the app.
        Run list-devices to list all connected devices, grouped by platform.
    --certificate - (Required when building for iOS) Sets the certificate that you want to use for code signing your iOS
        app. Must match the selected provisioning profile. You can set a certificate by index or name.
    --provision - (Required when building for iOS) Sets the provisioning profile that you want to use for code signing
        your iOS app. Must match the selected certificate. You can set a provisioning profile by index or name.
    --no-livesync - If set, disables LiveSync with the three-finger tap and hold gesture.

--[/]--

--[livesync]--
Usage:
    $ appbuilder livesync [<Platform>] [--device <id>] [--companion] [--watch]

Platform-specific example:
    $ appbuilder livesync android
    $ appbuilder livesync ios

Synchronizes the latest changes in your project to connected devices. In this version of the Telerik AppBuilder CLI,
you cannot synchronize changes to Windows Phone 8 connected devices.

Options:
    --watch - When you save changes to the project, changes are automatically synchronized
        to the connected device.
    --device - Specifies the serial number or the index of the connected device to which you want to synchronize changes. 
        Run list-devices to list all connected devices, grouped by platform.
    --companion - When you save changes to the project, changes are automatically synchronized
        to the Telerik AppBuilder companion app.

--[/]--

--[device|log]--
Usage:
    $ appbuilder device log [--device <id>]

Opens the device log stream for a selected connected device. You can select a device by index or identifier. In this version
of the Telerik AppBuilder CLI, you cannot synchronize changes to Windows Phone 8 connected devices.

Run list-devices to list all connected devices, grouped by platform.

--[/]--

--[plugin]--
Usage:
    $ appbuilder plugin [command]

Commands:
    find - Searches by keyword for plugins in the Apache Cordova Plugin Registry.
    fetch - Imports the selected Apache Cordova plugin into your project. You can specify a plugin by local path,
            URL to a plugin repository, or a name of a plugin published in the Apache Cordova Plugin Registry.
            The plugin must be Plugman-compatible.
--[/]--

--[plugin|find]--
Usage:
    $ appbuilder plugin find [<keyword> [ <keyword>]*>]

Searches by keyword for plugins in the Apache Cordova Plugin Registry.

--[/]--

--[plugin|fetch]--
Usage:
    $ appbuilder plugin fetch <name | path | URL> | [<keyword> [ <keyword>]*>]

Imports the selected Apache Cordova plugin into your project. You can specify a plugin by local path,
URL to a plugin repository, or a name of a plugin published in the Apache Cordova Plugin Registry. 
The plugin must be Plugman-compatible.
--[/]--

--[simulate]--
Usage:
    $ appbuilder simulate

Runs the current project in the device simulator.

In this version of the Telerik AppBuilder CLI, you cannot run your apps in the device simulator on OS X systems. The device simulator will become available for OS X in a future release of Telerik AppBuilder.

Options:
    --path <path> - Specifies the path to the project. If not specified, the project is searched
                    for in the current directory and all directories above it.

--[/]--

--[debug]--
Usage:
    $ appbuilder debug

Runs an application allowing you to remotely debug applications on connected devices.

In this version of the Telerik AppBuilder CLI, you cannot debug your apps on OS X systems. The application debugger will become available for OS X in a future release of Telerik AppBuilder.

--[/]--

--[list-projects]--
Usage:
    $ appbuilder list-projects

Lists all projects associated with your Telerik Platform account.

--[/]--

--[export-project]--
Usage:
    $ appbuilder export-project <ProjectIndex> | <ProjectName>

Exports one of your projects from the cloud and initializes it for development
in the current directory.
You can choose which project to export by its index or name.

Run list-projects to list all projects associated with your Telerik Platform account.

Options:
    --path <path> - Specifies where to export the selected project on your file system. If not set,
                    exports the project in the current directory.

--[/]--

--[edit-configuration]--
Usage:
    $ appbuilder edit-configuration <ConfigurationFile>

<ConfigurationFile> is the configuration file that you want to open. You can select a configuration file
    for editing by setting any of the following values.
#{templatesService.configurationFilesString}

--[/]--

--[user]--
Usage:
    $ appbuilder user

Prints information about the currently logged in user, including name, email address, 
subscription plan and license expiration.
--[/]--

--[provision]--
Usage:
    $ appbuilder provision [-v] [command]

Lists all configured provisioning profiles for code signing iOS applications with index and name. When building an app,
you can set the provisioning profile by index or name in the --provision option.

Options:
    -v, --verbose - Lists the devices included in the selected provisioning profile.
Commands:
    import - Imports a provisioning profile from file.
    remove - Removes a registered provisioning profile.
--[/]--

--[certificate]--
Usage:
    $ appbuilder certificate [command]

Lists all configured certificates for code signing iOS and Android applications with index and name. When building an app, you can
set the certificate by index or name in the --certificate option.

Commands:
    remove - Removes the selected certificate from the server.
    export - Exports the selected certificate from the server on your file system.
    import - Imports a certificate from your file system to the server.
--[/]--

--[certificate|create-self-signed]--
Usage:
    $ appbuilder certificate create-self-signed [<Name> [<Email> [<Country> [<Purpose> [<StartDate> [<EndDate>]]]]]]

Creates a self-signed certificate for code signing Android applications.

Depending on the certificate type, you can install your app for testing or you can publish it in Google Play.
If you want to publish your app in Google Play, verify that the certificate expires after October 22, 2033.

<Purpose> is the type of the certificate that you want to create. You can set the following purposes: Generic or GooglePlay.
<StartDate> and <EndDate> set the validity of the certificate. You must set the start and end date in the
        following format: yyyy-mm-dd. 
        If you want to publish your app in Google Play, verify that the end date is greater than 2033-10-22.

If you do not provide one or more command parameters, Telerik AppBuilder shows an interactive prompt to let you set the remaining
certificate details.
--[/]--

--[certificate|remove]--
Usage:
    $ appbuilder certificate remove <Name or index>

Removes a selected certificate from the server. 

Run list-certificates to list all available certificates with name and index.

CAUTION: Deleting a certificate cannot be undone. If you have not backed up the certificate, you will not be able to restore it. You will
    not be able to update any apps that you have signed and published with the certificate.
    Run export-certificate to store a copy of the certificate on your local file system.
--[/]--

--[certificate|export]--
Usage:
    $ appbuilder certificate export <Name or index> [<Password>]

Exports a selected certificate from the server as a P12 file. You must set a password for the exported file. If you do not set a password,
Telerik AppBuilder will prompt you to provide a password.

Run list-certificates to list all available certificates for code signing iOS and Android applications.

Options:
    --path <path> - Specifies where to store the exported certificate. If not specified, stores the exported certificate in the current 
            directory.
--[/]--

--[certificate|import]--
Usage:
    $ appbuilder certificate import <CertificateFile> [<Password>]

Imports an existing certificate from a P12 file stored on your local file system. If you do not provide the certificate password when
running the command, Telerik AppBuilder will prompt you to provide it.
--[/]--

--[appstore]--
Usage:
    $ appbuilder appstore <command>

Commands:
    list - Lists all applications in iTunes Connect that are in the Waiting for Upload state.
    upload - Builds the project and uploads the binary to iTunes Connect.
--[/]--

--[appstore|list]--
Usage:
    $ appbuilder appstore list <AppleID> [<Password>]

Lists all application records in iTunes Connect that are in the Waiting for Upload state. The list contains name, version, and
bundle ID for each application record.
<AppleID> and <Password> are your credentials for logging into iTunes Connect. If you do not provide your Apple ID password when
        running the command, Telerik AppBuilder will prompt you to provide it.

When running $ appbuilder appstore upload, you need to provide the name for the application record.

--[/]--

--[appstore|upload]--
Usage:
    $ appbuilder appstore upload <Application Name> <AppleID> [<Password>]
                 --certificate <index or name> --provision <index or name>

Builds the project and uploads the application to iTunes Connect.
<Application Name> is the name for an application record in the Waiting for Upload state. Run appstore-list to retrieve the names of your application
records that are in the Waiting for Upload state in iTunes Connect.
<AppleID> and <Password> are your credentials for logging into iTunes Connect. If you do not provide your Apple ID password when
        running the command, Telerik AppBuilder will prompt you to provide it.

Run list-certificates to list all available certificates for code signing your apps.
Run list-provisions to list all available provisioning profiles for code signing your apps.

Options:
    --certificate - Sets the certificate that you want to use for code signing your iOS
        app. Must be a production certificate and must match the specified provisioning profile.
        You can specify a certificate by index or name.
    --provision - Sets the provisioning profile that you want to use for code signing
        your iOS app. Must be an AppStore distribution provisioning profile and must match the specified certificate.
        You can specify a provisioning profile by index or name.
--[/]--

--[certificate-request|create]--
Usage:
    $ appbuilder certificate-request create [<Name> [<Email> [<Country>]]] [--save-to <File>]

Creates a certificate signing request (.csr) which you can upload in the iOS Dev Center.
If you do not provide values for <Name>, <Email> and <Country>, Telerik AppBuilder will prompt you to complete the missing details.

Options:
    --save-to <File> - Saves the certificate request to the selected file. If not specified, the certificate signing request is saved as
            certificate_request.csr.
--[/]--

--[certificate-request|list]--
Usage:
    $ appbuilder certificate-request

Lists all pending certificate signing requests.
--[/]--

--[certificate-request|remove]--
Usage:
    $ appbuilder certificate-request remove <Index>

Removes a pending certificate signing request. 

Run list-certificate-requests to list all pending certificate signing requests.
--[/]--

--[certificate-request|download]--
Usage:
    $ appbuilder certificate-request download <Index> [--save-to <File>]

Downloads a pending certificate signing request (.csr) which you can upload in the iOS Dev Center. 

Run list-certificate-requests to list all pending certificate signing requests. 

Options:
    --save-to <File> - Saves the certificate request to the selected file. If not specified, the certificate signing request is saved as
            certificate_request.csr.
--[/]--

--[prop]--
Usage:
    $appbuilder prop <command>
Commands:
    print - Shows the value for the selected project property.
    add - Enables more options for the selected project property, if the property accepts multiple values.
    set - Sets a project property.
    remove - Disables options for the selected project property, if the property accepts multiple values.
--[/]--

--[prop|add]--
Usage:
    $ appbuilder prop add <PropertyName> <value> [value]*

Enables more options for the selected project property, if the property accepts multiple values.

#{project.getProjectSchemaHelp}
--[/]--

--[prop|set]--
Usage:
    $ appbuilder prop set <PropertyName> <value> [value]*

Configures a project property.

#{project.getProjectSchemaHelp}
--[/]--

--[prop|remove]--
Usage:
    $ appbuilder prop remove <PropertyName> <value> [value]*

Disables an option for the selected project property, if the property accepts multiple values.

Alias: prop-rm

#{project.getProjectSchemaHelp}
--[/]--

--[prop|print]--
Usage:
    $ appbuilder prop print <PropertyName>

Shows the value for the selected project property.

#{project.getProjectSchemaHelp}
--[/]--

--[feature-usage-tracking]--
Usage:
    $appbuilder feature-usage-tracking <status|enable|disable>

Configures anonymous usage statistics tracking for the Telerik AppBuilder command-line interface.
All data gathered is used strictly for improving the product and will never be used to identify or contact you.

Options:
    status - Shows the current configuration for anonymous usage tracking for the
             Telerik AppBuilder command-line interface.
    enable - Enables anonymous usage statistics tracking. All data gathered is used strictly
             for improving the product and will never be used to identify or contact you.
    disable - Disables anonymous usage statistics tracking.
--[/]--
