{
	"ProjectName": {
		"description": "The project name identifies this project to the cloud build.",
		"validator": "projectNameValidator"
	},
	"ProjectGuid": {
		"description": "Unique identifier of the project.",
		"regex": "\\{[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}\\}",
		"validationMessage": "The project ID must be a GUID string enclosed in curly braces."
	},
	"AppIdentifier": {
		"description": "The application identifier (or app id) must match the app id property of the iOS mobile provision used for building.",
		"regex": "^[a-zA-Z]+([a-zA-Z0-9]*)(\\.[a-zA-Z]+([a-zA-Z0-9]*)){2,}$",
		"validationMessage": "The application identifier must consist of at least three alphanumeric strings separated by a dot. The alphanumeric strings must start with a letter."
	},
	"DisplayName": {
		"description": "The display name of the app."
	},
	"Description": {
		"description": "Application description."
	},
	"Author": {
		"description": "Application author name. If left empty, then the user account name is used."
	},
	"BundleVersion": {
		"description": "The application (or bundle) version.",
		"regex": "^(\\d+)(\\.\\d+)?(\\.\\d+)?$",
		"validationMessage": "The version must consist of two or three numbers separated with dots."
	},
	"AndroidPermissions": {
		"description": "Android permissions required by the app.",
		"flags": true,
		"range": {
			"android.permission.CAMERA": {
				"input": "CAMERA",
				"description": "Required to be able to access the camera device."
			},
			"android.permission.VIBRATE": {
				"input": "VIBRATE",
				"description": "Allows access to the vibrator."
			},
			"android.permission.ACCESS_COARSE_LOCATION": {
				"input": "ACCESS_COARSE_LOCATION",
				"description": "Allows an app to access approximate location derived from network location sources such as cell towers and Wi-Fi."
			},
			"android.permission.ACCESS_FINE_LOCATION": {
				"input": "ACCESS_FINE_LOCATION",
				"description": "Allows an app to access precise location from location sources such as GPS, cell towers, and Wi-Fi."
			},
			"android.permission.ACCESS_LOCATION_EXTRA_COMMANDS": {
				"input": "ACCESS_LOCATION_EXTRA_COMMANDS",
				"description": "Allows an application to access extra location provider commands."
			},
			"android.permission.READ_PHONE_STATE": {
				"input": "READ_PHONE_STATE",
				"description": "Allows read only access to phone state."
			},
			"android.permission.INTERNET": {
				"input": "INTERNET",
				"description": "Allows applications to open network sockets."
			},
			"android.permission.RECEIVE_SMS": {
				"input": "RECEIVE_SMS",
				"description": "Allows an application to monitor incoming SMS messages, to record or perform processing on them."
			},
			"android.permission.RECORD_AUDIO": {
				"input": "RECORD_AUDIO",
				"description": "Allows an application to record audio."
			},
			"android.permission.MODIFY_AUDIO_SETTINGS": {
				"input": "MODIFY_AUDIO_SETTINGS",
				"description": "Allows an application to modify global audio settings."
			},
			"android.permission.READ_CONTACTS": {
				"input": "READ_CONTACTS",
				"description": "Allows an application to read the user's contacts data."
			},
			"android.permission.WRITE_CONTACTS": {
				"input": "WRITE_CONTACTS",
				"description": "Allows an application to write (but not read) the user's contacts data."
			},
			"android.permission.WRITE_EXTERNAL_STORAGE": {
				"input": "WRITE_EXTERNAL_STORAGE",
				"description": "Allows an application to write to external storage."
			},
			"android.permission.ACCESS_NETWORK_STATE": {
				"input": "ACCESS_NETWORK_STATE",
				"description": "Allows applications to access information about networks."
			},
			"android.permission.ACCOUNT_MANAGER": {
				"input": "ACCOUNT_MANAGER",
				"description": "Allows applications to call into AccountAuthenticators."
			},
			"android.permission.GET_ACCOUNTS": {
				"input": "GET_ACCOUNTS",
				"description": "Allows access to the list of accounts in the Accounts Service."
			},
			"android.permission.MANAGE_ACCOUNTS": {
				"input": "MANAGE_ACCOUNTS",
				"description": "Allows an application to manage the list of accounts in the AccountManager."
			},
			"android.permission.BROADCAST_STICKY": {
				"input": "BROADCAST_STICKY",
				"description": "Allows an application to broadcast sticky intents."
			},
			"android.permission.WAKE_LOCK": {
				"input": "WAKE_LOCK",
				"description": "Allows using PowerManager WakeLocks to keep processor from sleeping or screen from dimming."
			},
			"android.permission.GET_TASKS": {
				"input": "GET_TASKS",
				"description": "Allows an application to get information about the currently or recently running tasks."
			}
		}
	},
	"DeviceOrientations": {
		"description": "List of supported device orientations",
		"range": ["Portrait", "Landscape"],
		"flags": true
	},
	"AndroidHardwareAcceleration": {
		"description": "Enable/disable Android hardware acceleration",
		"range": ["true", "false"]
	},
	"AndroidVersionCode": {
		"description": "Android version code (same as android:versionCode)",
		"regex": "^\\d+$",
		"validationMessage": "The Android version code must be a number. See the guidelines for versioning Android applications:\nhttp://developer.android.com/tools/publishing/versioning.html"
	},
	"iOSStatusBarStyle": {
		"description": "iOS status bar style",
		"range": ["Default","BlackTranslucent","BlackOpaque","Hidden"]
	},
	"iOSDeviceFamily": {
		"description": "List of supported iOS device families",
		"range": {
			"1": {
				"input": "iPhone",
				"description": "iPhone/iPod Touch device family"
			},
			"2": {
				"input": "iPad",
				"description": "iPad device family"
			}
		},
		"flags": true
	},
	"iOSBackgroundMode": {
		"description": "List of available iOS services in background mode",
		"range": ["audio","location","voip","newsstand-content","external-accessory","bluetooth-central","bluetooth-peripheral"],
		"flags": true
	},

	"WP8TileTitle": {
		"description": "The text that appears inside the app's tile on the Windows Phone 8 Start screen."
	},
	"WP8Publisher": {
		"description": "The publisher name of the Windows Phone 8 app. If left empty, then the user account name is used."
	},
	"WP8ProductID": {
		"description": "A GUID string uniquely identifying the application to Windows Phone 8.",
		"regex": "\\{[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}\\}",
		"validationMessage": "The product ID must be a GUID string enclosed in curly braces."
	},
	"WP8PublisherID": {
		"description": "A GUID string uniquely identifying the publisher to Windows Phone 8.",
		"regex": "\\{[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}\\}",
		"validationMessage": "The publisher ID must be a GUID string enclosed in curly braces."
	},
	"WP8Capabilities": {
		"description": "List of Windows Phone 8 application capabilities",
		"flags": true,
		"range": {
			"ID_CAP_APPOINTMENTS": {
				"input": "Appointments",
				"description": "Provides access to appointment data."
			},
			"ID_CAP_CONTACTS": {
				"input": "Contacts",
				"description": "Provides access to contacts data."
			},
			"ID_CAP_GAMERSERVICES": {
				"input": "GamerServices",
				"description": "Provides access to Xbox LIVE services. This capability must be disclosed because an app could share data with Xbox."
			},
			"ID_CAP_IDENTITY_DEVICE": {
				"input": "IdentityDevice",
				"description": "Provides access to device-specific information such as a unique device ID, or the manufacturer or model name."
			},
			"ID_CAP_IDENTITY_USER": {
				"input": "IdentityUser",
				"description": "Gives an app the ability to use an anonymous Microsoft account to identify the user."
			},
			"ID_CAP_ISV_CAMERA": {
				"input": "ISVCamera",
				"description": "Provides access to the rear (primary) camera or front-facing camera."
			},
			"ID_CAP_LOCATION": {
				"input": "Location",
				"description": "Provides access to location services."
			},
			"ID_CAP_MAP": {
				"input": "Map",
				"description": "Provides access to mapping functionality."
			},
			"ID_CAP_MEDIALIB_AUDIO": {
				"input": "MedialibAudio",
				"description": "Provides read-only access to audio items, including lists of audio items and audio item properties such as title and description, in the media library. It also provides the ability to add or delete songs. Delete operations display an additional prompt to the user."
			},
			"ID_CAP_MEDIALIB_VIDEO": {
				"input": "MedialibVideo",
				"description": "Provides read-only access to video items, including lists of video items, and video item properties in the media library."
			},
			"ID_CAP_MEDIALIB_PHOTO": {
				"input": "MedialibPhoto",
				"description": "Provides read-only access to photos in the media library, and photo properties, such as category. It also gives an app the ability to save photos in the Camera Roll and Saved Pictures folders."
			},
			"ID_CAP_MEDIALIB_PLAYBACK": {
				"input": "MedialibPlayback",
				"description": "Provides read/write access to media items that are currently playing. It also gives an app the ability to add media items to the History, Favorites, and New collections. Also supports background and foreground playback from an app’s isolated storage using the MediaElement control."
			},
			"ID_CAP_MICROPHONE": {
				"input": "Microphone",
				"description": "Provides access to the phone’s microphone. An app with this capability can record without a visual indication that the microphone is recording."
			},
			"ID_CAP_NETWORKING": {
				"input": "Networking",
				"description": "Provides access to network services. This capability must be disclosed because an app could incur charges when a phone is roaming."
			},
			"ID_CAP_PHONEDIALER": {
				"input": "PhoneDialer",
				"description": "Provides the ability to use the PhoneCallTask API."
			},
			"ID_CAP_PROXIMITY": {
				"input": "Proximity",
				"description": "Provides access to Near Field Communication (NFC) services."
			},
			"ID_CAP_PUSH_NOTIFICATION": {
				"input": "PushNotification",
				"description": "Provides the ability to receive push notifications from an internet service. This capability must be disclosed because an app could incur roaming charges."
			},
			"ID_CAP_REMOVABLE_STORAGE": {
				"input": "RemovableStorage",
				"description": "Provides access to data storage on an external storage component, such as an SD card."
			},
			"ID_CAP_RINGTONE_ADD": {
				"input": "RingtoneAdd",
				"description": "Provides the ability to add ringtones to the phone."
			},
			"ID_CAP_SENSORS": {
				"input": "Sensors",
				"description": "Provides access to any Windows Phone sensor."
			},
			"ID_CAP_SPEECH_RECOGNITION": {
				"input": "SpeechRecognition",
				"description": "Provides access to speech recognition and text-to-speech (TTS) services."
			},
			"ID_CAP_VOIP": {
				"input": "VOIP",
				"description": "Provides access to voice over IP (VoIP) calling services."
			},
			"ID_CAP_WALLET": {
				"input": "Wallet",
				"description": "Provides access to interactions with Wallet such as saving, updating, and deleting deals, membership cards, and payment instruments."
			},
			"ID_CAP_WALLET_PAYMENTINSTRUMENTS": {
				"input": "WalletPaymentInstruments",
				"description": "Provides access to Wallet payment instruments such as credit and debit cards. Doesn’t grant access to the secure element for secure NFC transactions."
			},
			"ID_CAP_WALLET_SECUREELEMENT": {
				"input": "WalletSecureElement",
				"description": "Provides access to a Wallet secure element for secure NFC transactions."
			},
			"ID_CAP_WEBBROWSERCOMPONENT": {
				"input": "WebBrowserComponent",
				"description": "Provides access to a web browser component. This capability must be disclosed because an app could use scripting, which introduces security risks."
			}
		}
	},
	"WP8Requirements": {
		"description": "List of hardware requirements imposed on a Windows Phone 8 device before installing.",
		"flags": true,
		"range": {
			"ID_REQ_MEMORY_300": {
				"input": "Memory300",
				"description": "For Windows Phone 8, indicates that the app requires more than 180 MB of memory and is not suited for a lower-memory device."
			},
			"ID_REQ_FRONTCAMERA": {
				"input": "FrontCamera",
				"description": "Indicates that an app requires a front-facing camera to function correctly. Adding this requirement prevents the app from installing on a phone without a front-facing camera."
			},
			"ID_REQ_REARCAMERA": {
				"input": "RearCamera",
				"description": "Indicates that an app requires a back-facing camera to function correctly. Selecting this option prevents the app from installing on a phone without a back-facing camera."
			},
			"ID_REQ_NFC": {
				"input": "NFC",
				"description": "Indicates that an app requires a phone with a chip that enables Near Field Communication (NFC) to function correctly. Selecting this option prevents the app from installing on a phone without an NFC chip."
			},
			"ID_REQ_MAGNETOMETER": {
				"input": "Magnetometer",
				"description": "Indicates that an app requires a phone that contains a compass to function correctly. Selecting this option prevents the app from installing on a phone that doesn’t have a compass."
			},
			"ID_REQ_GYROSCOPE": {
				"input": "Gyroscope",
				"description": "Indicates that an app requires a phone that contains a gyroscope to function correctly. Selecting this option prevents the app from installing on a phone that doesn’t have a gyroscope."
			}
		}
	},
	"WP8SupportedResolutions": {
		"description": "List of supported Windows Phone 8 device display resolutions.",
		"flags": true,
		"range": {
			"ID_RESOLUTION_WVGA": {
				"input": "WVGA"
			},
			"ID_RESOLUTION_WXGA": {
				"input": "WXGA"
			},
			"ID_RESOLUTION_HD720P": {
				"input": "720p"
			}
		}
	},
	"IsRunnable" : {
		"description": "Indicates that the project is runnable in Visual Studio",
		"range": [ "true" ]
	}
}
